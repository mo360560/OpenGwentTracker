<Application x:Class="Test.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MenuWindow.xaml">
    <Application.Resources>

        <!-- Card power TextBlock style -->
        <Style x:Key="CardPowerStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="TextElement.FontFamily" Value="Fonts/#GWENT" />
            <Setter Property="Foreground" Value="#e2dedb" />            
            <Setter Property="FontSize" Value="15" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=power_status}" Value="BUFFED">
                    <Setter Property="Foreground" Value="#5bd065"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=power_status}" Value="WEAKENED">
                    <Setter Property="Foreground" Value="#e03e53"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=power}" Value="0">
                    <Setter Property="Foreground" Value="Transparent"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Card name TextBlock style -->
        <Style x:Key="CardNameStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="#e2dedb" />
        </Style>

        <!-- Player info TextBlock style -->
        <Style x:Key="PlayerInfoStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="TextElement.FontFamily" Value="Fonts/#GWENT" />
            <Setter Property="Foreground" Value="#e2dedb" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>

        <!-- Player info TextBlock style -->
        <Style x:Key="PlacementHeaderStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="#e2dedb" />
            <Setter Property="FontSize" Value="13" />
        </Style>

        <!-- Expander ControlTemplate -->
        <!-- based on: https://docs.microsoft.com/en-us/dotnet/framework/wpf/controls/expander-styles-and-templates -->
        <Color x:Key="TrackerWhite">#e2dedb</Color>
        <ControlTemplate x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
            <Border x:Name="Border">
                <Border.Background>
                    <SolidColorBrush />
                </Border.Background>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="CollapsedArrow">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                      Value="{x:Static Visibility.Hidden}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="ExpandededArrow">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                      Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid>
                    <Path x:Name="CollapsedArrow"
                          HorizontalAlignment="Center" VerticalAlignment="Center"
                          Data="M 0 0 L 4 4 L 8 0 Z">
                        <Path.Fill>
                            <SolidColorBrush Color="{DynamicResource TrackerWhite}" />
                        </Path.Fill>
                    </Path>
                    <Path x:Name="ExpandededArrow"
                          HorizontalAlignment="Center" VerticalAlignment="Center"
                          Visibility="Collapsed"
                          Data="M 0 4 L 4 0 L 8 4 Z">
                        <Path.Fill>
                            <SolidColorBrush Color="{DynamicResource TrackerWhite}" />
                        </Path.Fill>
                    </Path>
                </Grid>
            </Border>
        </ControlTemplate>
        <Style TargetType="{x:Type Expander}" x:Key="ExpanderStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ContentRow" Height="0" />
                            </Grid.RowDefinitions>
                            <Border x:Name="Border" Grid.Row="0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="25" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton OverridesDefaultStyle="True"
                                                  Template="{StaticResource ExpanderToggleButton}"
                                                  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">    
                                    </ToggleButton>
                                    <ContentPresenter Grid.Column="1" ContentSource="Header" />
                                </Grid>
                            </Border>
                            <Border x:Name="Content" Grid.Row="1">
                                <ContentPresenter />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="ContentRow" 
                                        Property="Height"
                                        Value="{Binding DesiredHeight, ElementName=Content}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
